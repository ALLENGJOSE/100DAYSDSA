Basic approach:
import java.util.* ;
import java.io.*; 
public class Solution {

	public static int arrayEquilibriumIndex(int[] arr){  
		//Your code goes here
		int n = arr.length;
		for(int i=0;i<n;i++){
			int leftSum =0;
			int rightSum = 0;
		for(int j=0;j<i;j++){
			leftSum +=arr[j];
		}
		for(int j=i+1;j<n;j++){
			rightSum +=arr[j];
		}
		if(leftSum==rightSum){
			return i;
		}
		}
		return -1;
	}
}
TC:O(N^2)
SC:O(1)
Optimized Approach:
import java.util.* ;
import java.io.*; 
public class Solution {

	public static int arrayEquilibriumIndex(int[] arr){  
		//Your code goes here
		int n = arr.length;

		int totalSum=0;
		for(int i=0;i<n;i++){
			totalSum +=arr[i];
		}
		int leftSum=0;
		for(int i=0;i<n;i++){
		totalSum -=arr[i];
		if(totalSum==leftSum){
			return i;
		}
		leftSum+=arr[i];
		}
		return -1;
	}
}
TC:O(N)
SC:O(1)
