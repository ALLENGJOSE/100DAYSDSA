Given an array 'arr' with 'n' elements, the task is to rotate the array to the left by 'k' steps, where 'k' is non-negative.
Example:
'arr '= [1,2,3,4,5]
'k' = 1  rotated array = [2,3,4,5,1]
'k' = 2  rotated array = [3,4,5,1,2]
'k' = 3  rotated array = [4,5,1,2,3] and so on.

import java.util.ArrayList;

public class Solution {

    public static void reverse(ArrayList<Integer> arr, int start, int end) {
        while (start < end) {
            int temp = arr.get(start);
            arr.set(start, arr.get(end));
            arr.set(end, temp);
            start++;
            end--;
        }
    }

    public static ArrayList<Integer> rotateArray(ArrayList<Integer> arr, int k) {
        if (arr.size() == 0) {
            return arr;
        }
        if (k > arr.size() && arr.size() != 0) {
            k %= arr.size();
        }
        reverse(arr, 0, arr.size() - 1);//O(N)
        reverse(arr, 0, arr.size() - k - 1);//O(N)
        reverse(arr, arr.size() - k, arr.size() - 1);//O(N)
        return arr; 
    }
}
TC:O(N)
SC:O(1)
